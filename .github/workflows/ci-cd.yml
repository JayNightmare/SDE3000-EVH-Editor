name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test:
        name: Lint
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x, 20.x]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run ESLint
              run: npm run lint --if-present || npx eslint src/

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./coverage/lcov.info
                  fail_ci_if_error: false

    build:
        name: Build Application
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build application
              run: npm run build
              env:
                  GENERATE_SOURCEMAP: false

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-files
                  path: build/
                  retention-days: 7

    deploy:
        name: Deploy to GitHub Pages
        runs-on: ubuntu-latest
        needs: [test, build]
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        permissions:
            contents: read
            pages: write
            id-token: write

        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build application
              run: npm run build
              env:
                  GENERATE_SOURCEMAP: false

            - name: Setup Pages
              uses: actions/configure-pages@v4

            - name: Upload to GitHub Pages
              uses: actions/upload-pages-artifact@v3
              with:
                  path: build/

            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
